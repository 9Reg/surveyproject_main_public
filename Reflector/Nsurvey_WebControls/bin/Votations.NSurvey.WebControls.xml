<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Votations.NSurvey.WebControls</name>
    </assembly>
    <members>
        <member name="T:Votations.NSurvey.Designer.AutoFormat">
            <summary>
            Summary description for Form1.
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Designer.AutoFormat.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Designer.AutoFormat.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Votations.NSurvey.Helpers.PipeManager">
            <summary>
            Pipe manager handles the question/answer token 
            replacement with existing answers
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Helpers.PipeManager.PipeAnswerText(System.Int32,Votations.NSurvey.Data.VoterAnswersData.VotersAnswersDataTable)">
            <summary>
            Replace the pipe token with the answer text entered by 
            the user
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Helpers.PipeManager.PipeQuestionAnswers(System.Int32,Votations.NSurvey.Data.VoterAnswersData.VotersAnswersDataTable,System.String)">
            <summary>
            Replace the pipe token with the question answers
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Helpers.PipeManager.PipeValuesInText(System.Int32,System.String,Votations.NSurvey.Data.VoterAnswersData.VotersAnswersDataTable,System.String)">
            <summary>
            Parse the source text for pipe token and replace
            the token with the correct text depending on the
            given survey answers
            </summary>
        </member>
        <member name="T:Votations.NSurvey.Helpers.XmlFileManager">
            <summary>
            Xml file manager handles the loading, caching and localisation of the 
            given xml file name
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Helpers.XmlFileManager.GetLocalizedXml(System.String)">
            <summary>
            Returns the localized Xml file
            </summary>
            <returns></returns>
        </member>
        <member name="M:Votations.NSurvey.Helpers.XmlFileManager.GetNeutralXml(System.String)">
            <summary>
            Returns the default language neutral Xml file
            </summary>
            <returns></returns>
        </member>
        <member name="M:Votations.NSurvey.Helpers.XmlFileManager.GetXmlAnswers(System.String)">
            <summary>
            Loads and return the Xml information either
            from cache or from the file specified by
            the Xml filename
            </summary>
        </member>
        <member name="T:Votations.NSurvey.Reporting.VoterReportGenerator">
            <summary>
            base class for those who wants to provide 
            a specific voter report generation
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Reporting.VoterReportGenerator.SendReport(Votations.NSurvey.Data.NotificationMode,System.String,System.String,System.String,System.String)">
            <summary>
            Generates and sends a report and fill the message body
            depending on the notification mode chosen
            </summary>
        </member>
        <member name="T:Votations.NSurvey.Reporting.VoterTextReportGenerator">
            <summary>
            Generates a text report of a voter's answers
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Reporting.VoterTextReportGenerator.GetQuestionSectionCount(System.Int32)">
            <summary>
            Get highest section count answered by the user for this question
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Reporting.VoterTextReportGenerator.GetMatrixSectionCount(System.Data.DataView)">
            <summary>
            Get highest section count answered by the user
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Reporting.VoterTextReportGenerator.GenerateAnswersReport(System.Int32,System.Boolean,System.Int32)">
            <summary>
            Generates the answers list for the question
            </summary>
            <param name="questionId"></param>
            <param name="onlyAnswered">show only answers that have been answered</param>
        </member>
        <member name="T:Votations.NSurvey.Resources.HelpfilesManager">
            <summary>
            Helpfiles manager to access the survey xml Helpfiles.
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Resources.HelpfilesManager.GetString(System.String)">
            <summary>
            returns the resource value
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Votations.NSurvey.Resources.HelpfilesManager.GetString(System.String,System.String)">
            <summary>
            returns the resource value for the given
            language code
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Resources.HelpfilesManager.LoadResources(System.String)">
            <summary>
            Loads the resource from cache or from the 
            xml files
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Resources.HelpfilesManager.TranslateListControl(System.Web.UI.WebControls.ListControl)">
            <summary>
            Look up the given item texts in the resource file 
            to translate them
            </summary>
            <param name="dropDown"></param>
        </member>
        <member name="T:Votations.NSurvey.Resources.ResourceManager">
            <summary>
            Resource manager to access the nsurvey xml resources.
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Resources.ResourceManager.GetString(System.String)">
            <summary>
            returns the resource value
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Votations.NSurvey.Resources.ResourceManager.GetString(System.String,System.String)">
            <summary>
            returns the resource value for the given
            language code
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Resources.ResourceManager.LoadResources(System.String)">
            <summary>
            Loads the resource from cache or from the 
            xml files
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Resources.ResourceManager.TranslateListControl(System.Web.UI.WebControls.ListControl)">
            <summary>
            Look up the given item texts in the resource file 
            to translate them
            </summary>
            <param name="dropDown"></param>
        </member>
        <member name="T:Votations.NSurvey.Security.IPRangeSecurityAddIn">
            <summary>
            Add in that handles the email security 
            A user will need to have a valid authentication
            code in order to access the survey
            </summary>
        </member>
        <member name="T:Votations.NSurvey.Security.IWebSecurityAddIn">
            <summary>
            Security AddIns that are made available to the user 
            for survey access security purposes must implement
            this interface
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.IWebSecurityAddIn.GetAddInVoterData(System.Int32)">
            <summary>
            Can return keys/values of the custom 
            stored data during the ProcessVoterData. 
            At this time these data are retrieved to
            be shown in individual reports and for results export
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.IWebSecurityAddIn.GetAdministrationInterface(System.Web.UI.WebControls.Style)">
            <summary>
            Must create and return the control 
            that will show the administration interface
            If none is available returns null
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.IWebSecurityAddIn.GetLoginInterface(System.Web.UI.WebControls.Style)">
            <summary>
            In case the user has not been authenticated you can 
            create and return a control 
            that will show the logon interface.
            If none is available returns null
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.IWebSecurityAddIn.InitOnSurveyAddition">
            <summary>
            Method called once an addin has been added to a survey
            Can be used to set default values, settings for the addin
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.IWebSecurityAddIn.IsAuthenticated">
            <summary>
            Check if the current user has already
            the correct credentials
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.IWebSecurityAddIn.ProcessVoterData(Votations.NSurvey.Data.VoterAnswersData)">
            <summary>
            Method to handle voter data once it has been stored in the database
            </summary>
            <param name="voter">Voter information as saved in the database and its answers</param>
        </member>
        <member name="M:Votations.NSurvey.Security.IWebSecurityAddIn.UnInitOnSurveyRemoval">
            <summary>
            Method called once an addin has been removed from a survey
            Can be used to remove useless settings for the addin
            </summary>
        </member>
        <member name="P:Votations.NSurvey.Security.IWebSecurityAddIn.LanguageCode">
            <summary>
            Contains the current user language
            choice in a multi-language survey
            </summary>
        </member>
        <member name="P:Votations.NSurvey.Security.IWebSecurityAddIn.ViewState">
            <summary>
            Must be set to a valid Viewstate, 
            allows Addins to store data between postbacks
            until the addin unload is called again
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.IPRangeSecurityAddIn.GetAddInVoterData(System.Int32)">
            <summary>
            Can return keys/values of the custom 
            stored data during the ProcessVoterData. 
            At this time these data are retrieved to
            be shown in individual reports and for results export
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.IPRangeSecurityAddIn.GetAdministrationInterface(System.Web.UI.WebControls.Style)">
            <summary>
            Must create and return the control 
            that will show the administration interface
            If none is available returns null
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.IPRangeSecurityAddIn.GetLoginInterface(System.Web.UI.WebControls.Style)">
            <summary>
            Must create and return the control 
            that will show the logon interface.
            If none is available returns null
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.IPRangeSecurityAddIn.InitOnSurveyAddition">
            <summary>
            Method called once an addin has been added to a survey
            Can be used to set default values, settings for the addin
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.IPRangeSecurityAddIn.IsAuthenticated">
            <summary>
            Check if the current user has given
            the correct credentials
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.IPRangeSecurityAddIn.ProcessVoterData(Votations.NSurvey.Data.VoterAnswersData)">
            <summary>
            Method to handle voter data once it has been stored in the database
            </summary>
            <param name="voter">Voter information as saved in the database and its answers</param>
        </member>
        <member name="M:Votations.NSurvey.Security.IPRangeSecurityAddIn.UnInitOnSurveyRemoval">
            <summary>
            Method called once an addin has been remove from a survey
            Can be used to remove useless settings for the addin
            </summary>
        </member>
        <member name="P:Votations.NSurvey.Security.IPRangeSecurityAddIn.LanguageCode">
            <summary>
            Contains the current user language
            choice in a multi-language survey
            </summary>
        </member>
        <member name="T:Votations.NSurvey.Security.TokenSecurityAddIn">
            <summary>
            Add in that handles the email security 
            A user will need to have a valid authentication
            code in order to access the survey
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.TokenSecurityAddIn.GetAddInVoterData(System.Int32)">
            <summary>
            Can return keys/values of the custom 
            stored data during the ProcessVoterData. 
            At this time these data are retrieved to
            be shown in individual reports and for results export
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.TokenSecurityAddIn.GetAdministrationInterface(System.Web.UI.WebControls.Style)">
            <summary>
            Must create and return the control 
            that will show the administration interface
            If none is available returns null
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.TokenSecurityAddIn.GetLoginInterface(System.Web.UI.WebControls.Style)">
            <summary>
            Must create and return the control 
            that will show the logon interface.
            If none is available returns null
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.TokenSecurityAddIn.InitOnSurveyAddition">
            <summary>
            Method called once an addin has been added to a survey
            Can be used to set default values, settings for the addin
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.TokenSecurityAddIn.IsAuthenticated">
            <summary>
            Check if the current user has given
            the correct credentials
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.TokenSecurityAddIn.ProcessVoterData(Votations.NSurvey.Data.VoterAnswersData)">
            <summary>
            Method to handle voter data once it has been stored in the database
            </summary>
            <param name="voter">Voter information as saved in the database and its answers</param>
        </member>
        <member name="M:Votations.NSurvey.Security.TokenSecurityAddIn.UnInitOnSurveyRemoval">
            <summary>
            Method called once an addin has been remove from a survey
            Can be used to remove useless settings for the addin
            </summary>
        </member>
        <member name="P:Votations.NSurvey.Security.TokenSecurityAddIn.LanguageCode">
            <summary>
            Contains the current user language
            choice in a multi-language survey
            </summary>
        </member>
        <member name="P:Votations.NSurvey.Security.TokenSecurityAddIn.VisitorToken">
            <summary>
            Return the current UId of the visitor
            </summary>
        </member>
        <member name="T:Votations.NSurvey.Security.ASPNetContextSecurityAddIn">
            <summary>
            Add in that handles the ASP.net security 
            context (forms, windows, custom ...) to detect if a 
            user is logged in and retrieve the username from the aspnet context
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.ASPNetContextSecurityAddIn.GetAddInVoterData(System.Int32)">
            <summary>
            Can return keys/values of the custom 
            stored data during the ProcessVoterData. 
            At this time these data are retrieved to
            be shown in individual reports and for results export
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.ASPNetContextSecurityAddIn.GetAdministrationInterface(System.Web.UI.WebControls.Style)">
            <summary>
            Must create and return the control 
            that will show the administration interface
            If none is available returns null
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.ASPNetContextSecurityAddIn.GetLoginInterface(System.Web.UI.WebControls.Style)">
            <summary>
            Must create and return the control 
            that will show the logon interface.
            If none is available returns null
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.ASPNetContextSecurityAddIn.InitOnSurveyAddition">
            <summary>
            Method called once an addin has been added to a survey
            Can be used to set default values, settings for the addin
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.ASPNetContextSecurityAddIn.IsAuthenticated">
            <summary>
            Check if the current user has given
            the correct credentials
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.ASPNetContextSecurityAddIn.ProcessVoterData(Votations.NSurvey.Data.VoterAnswersData)">
            <summary>
            Method to handle voter data once it has been stored in the database
            </summary>
            <param name="voter">Voter information as saved in the database and its answers</param>
        </member>
        <member name="M:Votations.NSurvey.Security.ASPNetContextSecurityAddIn.UnInitOnSurveyRemoval">
            <summary>
            Method called once an addin has been remove from a survey
            Can be used to remove useless settings for the addin
            </summary>
        </member>
        <member name="P:Votations.NSurvey.Security.ASPNetContextSecurityAddIn.LanguageCode">
            <summary>
            Contains the current user language
            choice in a multi-language survey
            </summary>
        </member>
        <member name="T:Votations.NSurvey.Security.CookieWebSecurityAddIn">
            <summary>
            Add in that handles the cookie security 
            to detects the security cookie and see if a 
            user has already taken a survey or not.
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.CookieWebSecurityAddIn.GetAddInVoterData(System.Int32)">
            <summary>
            Can return keys/values of the custom 
            stored data during the ProcessVoterData. 
            At this time these data are retrieved to
            be shown in individual reports and for results export
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.CookieWebSecurityAddIn.GetAdministrationInterface(System.Web.UI.WebControls.Style)">
            <summary>
            Must create and return the control 
            that will show the administration interface
            If none is available returns null
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.CookieWebSecurityAddIn.GetLoginInterface(System.Web.UI.WebControls.Style)">
            <summary>
            Must create and return the control 
            that will show the logon interface.
            If none is available returns null
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.CookieWebSecurityAddIn.InitOnSurveyAddition">
            <summary>
            Method called once an addin has been added to a survey
            Can be used to set default values, settings for the addin
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.CookieWebSecurityAddIn.IsAuthenticated">
            <summary>
            Check if the current user has given
            the correct credentials
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.CookieWebSecurityAddIn.ProcessVoterData(Votations.NSurvey.Data.VoterAnswersData)">
            <summary>
            Method to handle voter data once it has been stored in the database
            </summary>
            <param name="voter">Voter information as saved in the database and its answers</param>
        </member>
        <member name="M:Votations.NSurvey.Security.CookieWebSecurityAddIn.UnInitOnSurveyRemoval">
            <summary>
            Method called once an addin has been remove from a survey
            Can be used to remove useless settings for the addin
            </summary>
        </member>
        <member name="P:Votations.NSurvey.Security.CookieWebSecurityAddIn.LanguageCode">
            <summary>
            Contains the current user language
            choice in a multi-language survey
            </summary>
        </member>
        <member name="T:Votations.NSurvey.Security.EmailWebSecurityAddIn">
            <summary>
            Add in that handles the email security 
            A user will need to have a valid authentication
            code in order to access the survey
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.EmailWebSecurityAddIn.GetAddInVoterData(System.Int32)">
            <summary>
            Can return keys/values of the custom 
            stored data during the ProcessVoterData. 
            At this time these data are retrieved to
            be shown in individual reports and for results export
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.EmailWebSecurityAddIn.GetAdministrationInterface(System.Web.UI.WebControls.Style)">
            <summary>
            Must create and return the control 
            that will show the administration interface
            If none is available returns null
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.EmailWebSecurityAddIn.GetLoginInterface(System.Web.UI.WebControls.Style)">
            <summary>
            Must create and return the control 
            that will show the logon interface.
            If none is available returns null
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.EmailWebSecurityAddIn.hasAnswered">
            <summary>
            Method to check if the user has the right 
            to post answers to the form. This method
            is called before the voter has been stored
            in the database
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.EmailWebSecurityAddIn.InitOnSurveyAddition">
            <summary>
            Method called once an addin has been added to a survey
            Can be used to set default values, settings for the addin
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.EmailWebSecurityAddIn.IsAuthenticated">
            <summary>
            Check if the current user has given
            the correct credentials
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.EmailWebSecurityAddIn.ProcessVoterData(Votations.NSurvey.Data.VoterAnswersData)">
            <summary>
            Method to handle voter data once it has been stored in the database
            </summary>
            <param name="voter">Voter information as saved in the database and its answers</param>
        </member>
        <member name="M:Votations.NSurvey.Security.EmailWebSecurityAddIn.UnInitOnSurveyRemoval">
            <summary>
            Method called once an addin has been remove from a survey
            Can be used to remove useless settings for the addin
            </summary>
        </member>
        <member name="P:Votations.NSurvey.Security.EmailWebSecurityAddIn.LanguageCode">
            <summary>
            Contains the current user language
            choice in a multi-language survey
            </summary>
        </member>
        <member name="P:Votations.NSurvey.Security.EmailWebSecurityAddIn.VisitorUId">
            <summary>
            Return the current UId of the visitor
            </summary>
        </member>
        <member name="T:Votations.NSurvey.Security.EntryQuotaSecurityAddIn">
            <summary>
            Checks if the quota that were set are over or if 
            new entries are still allowed
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.EntryQuotaSecurityAddIn.BuildRow(System.Web.UI.Control,System.String,System.Web.UI.WebControls.Style)">
            <summary>
            Build a row with the given control and style
            </summary>
            <param name="child"></param>
            <param name="rowStyle"></param>
            <param name="labelText"></param>
            <returns></returns>
        </member>
        <member name="M:Votations.NSurvey.Security.EntryQuotaSecurityAddIn.GetAddInVoterData(System.Int32)">
            <summary>
            Can return keys/values of the custom 
            stored data during the ProcessVoterData. 
            At this time these data are retrieved to
            be shown in individual reports and for results export
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.EntryQuotaSecurityAddIn.GetAdministrationInterface(System.Web.UI.WebControls.Style)">
            <summary>
            Must create and return the control 
            that will show the administration interface
            If none is available returns null
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.EntryQuotaSecurityAddIn.GetLoginInterface(System.Web.UI.WebControls.Style)">
            <summary>
            Must create and return the control 
            that will show the logon interface.
            If none is available returns null
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.EntryQuotaSecurityAddIn.InitOnSurveyAddition">
            <summary>
            Method called once an addin has been added to a survey
            Can be used to set default values, settings for the addin
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.EntryQuotaSecurityAddIn.IsAuthenticated">
            <summary>
            Check if the current survey
            has enough quota left to allow a new entry
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.EntryQuotaSecurityAddIn.ProcessVoterData(Votations.NSurvey.Data.VoterAnswersData)">
            <summary>
            Method to handle voter data once it has been stored in the database
            </summary>
            <param name="voter">Voter information as saved in the database and its answers</param>
        </member>
        <member name="M:Votations.NSurvey.Security.EntryQuotaSecurityAddIn.UnInitOnSurveyRemoval">
            <summary>
            Method called once an addin has been remove from a survey
            Can be used to remove useless settings for the addin
            </summary>
        </member>
        <member name="P:Votations.NSurvey.Security.EntryQuotaSecurityAddIn.LanguageCode">
            <summary>
            Contains the current user language
            choice in a multi-language survey
            </summary>
        </member>
        <member name="T:Votations.NSurvey.Security.IPWebSecurityAddIn">
            <summary>
            Add in that handles the IP security 
            to check if an IP has already taken
            a survey or not.
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.IPWebSecurityAddIn.GetAddInVoterData(System.Int32)">
            <summary>
            Can return keys/values of the custom 
            stored data during the ProcessVoterData. 
            At this time these data are retrieved to
            be shown in individual reports and for results export
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.IPWebSecurityAddIn.GetAdministrationInterface(System.Web.UI.WebControls.Style)">
            <summary>
            Must create and return the control 
            that will show the administration interface
            If none is available returns null
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.IPWebSecurityAddIn.GetLoginInterface(System.Web.UI.WebControls.Style)">
            <summary>
            Must create and return the control 
            that will show the logon interface.
            If none is available returns null
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.IPWebSecurityAddIn.InitOnSurveyAddition">
            <summary>
            Method called once an addin has been added to a survey
            Can be used to set default values, settings for the addin
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.IPWebSecurityAddIn.IsAuthenticated">
            <summary>
            Check if the current user has given
            the correct credentials
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.IPWebSecurityAddIn.ProcessVoterData(Votations.NSurvey.Data.VoterAnswersData)">
            <summary>
            Method to handle voter data once it has been stored in the database
            </summary>
            <param name="voter">Voter information as saved in the database and its answers</param>
        </member>
        <member name="M:Votations.NSurvey.Security.IPWebSecurityAddIn.UnInitOnSurveyRemoval">
            <summary>
            Method called once an addin has been remove from a survey
            Can be used to remove useless settings for the addin
            </summary>
        </member>
        <member name="P:Votations.NSurvey.Security.IPWebSecurityAddIn.LanguageCode">
            <summary>
            Contains the current user language
            choice in a multi-language survey
            </summary>
        </member>
        <member name="T:Votations.NSurvey.Security.NSurveyContextSecurityAddIn">
            <summary>
            Add in that handles the NSurvey context security 
            context to detect if a user is logged in nsurvey 
            and retrieve the username from the context
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.NSurveyContextSecurityAddIn.GetAddInVoterData(System.Int32)">
            <summary>
            Can return keys/values of the custom 
            stored data during the ProcessVoterData. 
            At this time these data are retrieved to
            be shown in individual reports and for results export
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.NSurveyContextSecurityAddIn.GetAdministrationInterface(System.Web.UI.WebControls.Style)">
            <summary>
            Must create and return the control 
            that will show the administration interface
            If none is available returns null
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.NSurveyContextSecurityAddIn.GetLoginInterface(System.Web.UI.WebControls.Style)">
            <summary>
            Must create and return the control 
            that will show the logon interface.
            If none is available returns null
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.NSurveyContextSecurityAddIn.InitOnSurveyAddition">
            <summary>
            Method called once an addin has been added to a survey
            Can be used to set default values, settings for the addin
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.NSurveyContextSecurityAddIn.IsAuthenticated">
            <summary>
            Check if the current user has given
            the correct credentials
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.NSurveyContextSecurityAddIn.ProcessVoterData(Votations.NSurvey.Data.VoterAnswersData)">
            <summary>
            Method to handle voter data once it has been stored in the database
            </summary>
            <param name="voter">Voter information as saved in the database and its answers</param>
        </member>
        <member name="M:Votations.NSurvey.Security.NSurveyContextSecurityAddIn.UnInitOnSurveyRemoval">
            <summary>
            Method called once an addin has been remove from a survey
            Can be used to remove useless settings for the addin
            </summary>
        </member>
        <member name="P:Votations.NSurvey.Security.NSurveyContextSecurityAddIn.LanguageCode">
            <summary>
            Contains the current user language
            choice in a multi-language survey
            </summary>
        </member>
        <member name="T:Votations.NSurvey.Security.PasswordWebSecurityAddIn">
            <summary>
            Protects the survey access through a password
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.PasswordWebSecurityAddIn.GetAddInVoterData(System.Int32)">
            <summary>
            Can return keys/values of the custom 
            stored data during the ProcessVoterData. 
            At this time these data are retrieved to
            be shown in individual reports and for results export
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.PasswordWebSecurityAddIn.GetAdministrationInterface(System.Web.UI.WebControls.Style)">
            <summary>
            Must create and return the control 
            that will show the administration interface
            If none is available returns null
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.PasswordWebSecurityAddIn.GetLoginInterface(System.Web.UI.WebControls.Style)">
            <summary>
            Must create and return the control 
            that will show the logon interface.
            If none is available returns null
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.PasswordWebSecurityAddIn.InitOnSurveyAddition">
            <summary>
            Method called once an addin has been added to a survey
            Can be used to set default values, settings for the addin
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.PasswordWebSecurityAddIn.IsAuthenticated">
            <summary>
            Check if the current user has given
            the correct credentials
            </summary>
        </member>
        <member name="M:Votations.NSurvey.Security.PasswordWebSecurityAddIn.EncryptSurveyPassword(System.String)">
            <summary>
            Encrypts the surveys's password
            </summary>
            <param name="password">password</param>
            <returns>encrypted password</returns>
        </member>
        <member name="M:Votations.NSurvey.Security.PasswordWebSecurityAddIn.ProcessVoterData(Votations.NSurvey.Data.VoterAnswersData)">
            <summary>
            Method to handle voter data once it has been stored in the database
            </summary>
            <param name="voter">Voter information as saved in the database and its answers</param>
        </member>
        <member name="M:Votations.NSurvey.Security.PasswordWebSecurityAddIn.UnInitOnSurveyRemoval">
            <summary>
            Method called once an addin has been remove from a survey
            Can be used to remove useless settings for the addin
            </summary>
        </member>
        <member name="P:Votations.NSurvey.Security.PasswordWebSecurityAddIn.IsPasswordValid">
            <summary>
            Return the current UId of the visitor
            </summary>
        </member>
        <member name="P:Votations.NSurvey.Security.PasswordWebSecurityAddIn.LanguageCode">
            <summary>
            Contains the current user language
            choice in a multi-language survey
            </summary>
        </member>
        <member name="T:Votations.NSurvey.Security.WebSecurityAddInFactory">
            <summary>
            Creates a new answer item instance from the db answer data
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.ExtendedAnswerItem">
            <summary>
            base class that is required for a class that wants to be used 
            as an answer inside a questionitem class
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.AnswerItem">
            <summary>
            base class that is required for a class that wants to be used 
            as an answer inside a questionitem class
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerItem.GetPostedAnswerData">
            <summary>
            Returns the selected, posted data of the answer must be 
            implemented by all classes in the hierarchy 
            </summary>
            <returns>The selected, posted answers of the answer</returns>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerItem.OnAnswerMessage(Votations.NSurvey.WebControls.UI.AnswerItemMessageEventArgs)">
            <summary>
            Event to trigger if any messages must be send
            to the container
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerItem.OnAnswerPost(Votations.NSurvey.WebControls.UI.AnswerItemEventArgs)">
            <summary>
            Event to trigger if answers have been posted
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerItem.OnAnswerPublished(Votations.NSurvey.WebControls.UI.AnswerItemEventArgs)">
            <summary>
            Post an event to notify subscribers that answers has been published
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerItem.OnAnswerPublisherCreated(Votations.NSurvey.WebControls.UI.AnswerItemEventArgs)">
            <summary>
            Post an event to notify subscribers that the publisher 
            has been created with its child controls tree and properties 
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerItem.OnInvalidAnswer(Votations.NSurvey.WebControls.UI.AnswerItemInvalidEventArgs)">
            <summary>
            Event to trigger if any server side validation errors have
            occured
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerItem.OnPreRender(System.EventArgs)">
            <summary>
            Register the control to receive a callback from the page
            on the postback event
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.AnswerItem.DefaultText">
            <summary>
            Can be used to restore a previous state 
            of the item
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.AnswerItem.LanguageCode">
            <summary>
            Language in which 
            the messages will be 
            rendered 
            </summary>
            <remarks>
            if no language is specified
            the default thread culture is taken
            </remarks>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.AnswerItem.Question">
            <summary>
            Gets a reference to the QuestionItem instance that contains 
            the answer item
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.AnswerItem.RenderMode">
            <summary>
            Defines in which mode the control is going 
            to be rendered eg : if its for edition or if its 
            to let the user answer the question
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.AnswerItem.SectionContainer">
            <summary>
            Current section that contains
            the answer
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.ExtendedAnswerItem.GeneratePropertiesUI">
            <summary>
            Method must return a webcontrol allowing 
            the user to modify the custom properties 
            of the item
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.ExtendedAnswerItem.PresistProperties">
            <summary>
            Serialize and persists properties in the db
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.ExtendedAnswerItem.RestoreProperties">
            <summary>
            Loads and de-serialize and populate the extended 
            properties of the current answer item and cache
            them.
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.IFieldItem">
            <summary>
            Define the properties that are required for a class 
            that wants to act as a field inside a question.
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.IClientScriptValidator">
            <summary>
            Define the properties that are required for an answeritem class 
            that generates client side validation code.
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.IClientScriptValidator.GetControlIdToValidate">
            <summary>
            Returns the field ID and 
            ensures the current control has children,
            then get the field unique ID in the control tree.
            Used to by parent controls to render the correct javascript
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.IAnswerPublisher">
            <summary>
            Marker interface which indicates if an AnswerItem is publishing
            its answers to subscribers. 
            Use it if your answer item type is implementing the logic to publish 
            its answers.
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.IMandatoryAnswer">
            <summary>
            Define the properties that are required for a class 
            that wants to be notified if a user has requested
            that an answer has to be posted
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.IRegExValidator">
            <summary>
            Define the properties that are required for an answeritem class 
            that needs to use regular expression validation.
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.IRegExValidator.RegExpression">
            <summary>
            Regular expression that will be used
            by the answer item to validate user's answer
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.IRegExValidator.RegExpressionErrorMessage">
            <summary>
            Message that will be show to the user
            if regex failed
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.ThirdPartyItems.FreeTextBoxAnswerItem.ToolBarLayout">
            <summary>
            CKeditor toolbarlayout options: full/ basic
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.AnswerFieldSliderItem">
            <summary>
            AnswerType example that inherits a textbox behaviors and adds a slider
            to it; jquery scripts used to add slider;
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.AnswerFieldItem">
            <summary>
            Base class to represent a field behavior with external java 
            script validation code
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerFieldItem.CreateChildControls">
            <summary>
            Create the "layout" and adds the textbox control to the 
            control tree
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerFieldItem.GetControlIdToValidate">
            <summary>
            Returns the field ID and 
            ensures the current control has children,
            then get the field unique ID in the control tree.
            Used to by parent controls to render the correct javascript
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerFieldItem.GetPostedAnswerData">
            <summary>
            Returns the textbox's text to the subscribers once
            there is a postback
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerFieldItem.GetUserAnswers">
            <summary>
            Returns the answeritem user's answers
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerFieldItem.OnPreRender(System.EventArgs)">
            <summary>
            If a javascript function was provided adds it to the 
            current page
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerFieldItem.ServerValidation">
            <summary>
            Validate user answers
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.SectionQuestion">
            <summary>
            Abstract class that questions which needs
            postback handling of the answers and handling
            of multiple inner answer sections
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.ActiveQuestion">
            <summary>
            Base active question class for all question controls that needs handling 
            of the posted child answeritems field values 
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.QuestionItem">
            <summary>
            Base class for all question controls that needs to be 
            included inside the .nsurvey control
            as a question
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.QuestionItem.BuildRow(System.Web.UI.Control,System.Web.UI.WebControls.Style)">
            <summary>
            Build a row with the given control and style
            </summary>
            <param name="child"></param>
            <param name="rowStyle"></param>
            <returns></returns>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.QuestionItem.AnswerStyle">
            <summary>
            Style used for the question's answers
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.QuestionItem.LanguageCode">
            <summary>
            Language in which 
            the messages will be 
            rendered 
            </summary>
            <remarks>
            if no language is specified
            the default thread culture is taken
            </remarks>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.QuestionItem.QuestionId">
            <summary>
            Id of the question stored in the DB
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.QuestionItem.QuestionNumber">
            <summary>
            Number of the Question 
            in the survey
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.QuestionItem.QuestionStyle">
            <summary>
            Sets the style for the question
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.QuestionItem.QuestionTable">
            <summary>
            Table that holds the question's layout
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.QuestionItem.RenderMode">
            <summary>
            Defines in which mode the control is going 
            to be rendered eg : if its for edition or if its 
            to let the user answer the question
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.QuestionItem.SelectionTable">
            <summary>
            Table that holds the question's selections layout
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.QuestionItem.Text">
            <summary>
            Text of the question
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.ActiveQuestion.DisplayAnswerMessages">
            <summary>
            Check if any answer has sent a message to display
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.ActiveQuestion.DisplayErrorMessages">
            <summary>
            Check if everything was validated 
            and if not, add the errors to the layout
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.ActiveQuestion.MaxSelectionsReached(Votations.NSurvey.Data.PostedAnswerDataCollection)">
            <summary>
            Check if selections has reached the max quota
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.ActiveQuestion.MinSelectionsRequired(Votations.NSurvey.Data.PostedAnswerDataCollection)">
            <summary>
            Check if enough selections have been made
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.ActiveQuestion.OnAnswersPost(Votations.NSurvey.WebControls.UI.QuestionItemAnswersEventArgs)">
            <summary>
            Post an event when all answers have been
            collected and grouped.
            </summary>
            <param name="e">The question's answers</param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.ActiveQuestion.OnBubbleEvent(System.Object,System.EventArgs)">
            <summary>
            Takes care of the children controls (answer items) events
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.ActiveQuestion.OnClientScriptGeneration(Votations.NSurvey.WebControls.UI.QuestionItemClientScriptEventArgs)">
            <summary>
            Post an event when a client script has been generated
            </summary>
            <param name="e">Question's invalid answers args</param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.ActiveQuestion.OnInvalidAnswers(Votations.NSurvey.WebControls.UI.QuestionItemInvalidAnswersEventArgs)">
            <summary>
            Post an event when there are invalid server side checked answers
            </summary>
            <param name="e">Question's invalid answers args</param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.ActiveQuestion.OnPreRender(System.EventArgs)">
            <summary>
            Register the control for postback
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.ActiveQuestion.OnSelectionOverflow(Votations.NSurvey.WebControls.UI.QuestionItemAnswersEventArgs)">
            <summary>
            Post an event when there are too many selections
            </summary>
            <param name="e">Question's answers</param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.ActiveQuestion.OnSelectionRequired(Votations.NSurvey.WebControls.UI.QuestionItemAnswersEventArgs)">
            <summary>
            Post an event when there is a missing
            answer
            </summary>
            <param name="e">Question's answer if any was answered</param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.ActiveQuestion.PostedAnswersHandler(Votations.NSurvey.Data.PostedAnswerDataCollection)">
            <summary>
            Last chance to change any answer that was posted
            by child answeritems before they get posted to 
            subscribers
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.ActiveQuestion.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Handle all the postback data and store the select answers and field 
            of the question
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.ActiveQuestion.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            Raise the AnswerPosted event
            </summary>
        </member>
        <member name="E:Votations.NSurvey.WebControls.UI.ActiveQuestion.AnswerPosted">
            <summary>
            Events posted by the question
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ActiveQuestion.ConfirmationMessageStyle">
            <summary>
            Style of the confirmation messages of the survey and questions
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ActiveQuestion.DisplayValidationErrorMessages">
            <summary>
            Do we add the validation error messages
            to the question layout
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ActiveQuestion.EnableAnswersDefault">
            <summary>
            Enable question's answers default values
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ActiveQuestion.EnableClientSideValidation">
            <summary>
            Enable client side validation of answers which needs it
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ActiveQuestion.EnableServerSideValidation">
            <summary>
            Enable server side validation of answers which needs it
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ActiveQuestion.HasInvalidAnswers">
            <summary>
            Has the question any invalid answer
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ActiveQuestion.IsSelectionOverflow">
            <summary>
            Has the question too much answers ?
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ActiveQuestion.IsSelectionRequired">
            <summary>
            Has the question been answered ?
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ActiveQuestion.MaxAnswerSelectionMessage">
            <summary>
            Message show when too much selections were
            selected in the question
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ActiveQuestion.MaxSelectionAllowed">
            <summary>
            Max. of selection required in the question
            (Fields are not checked)
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ActiveQuestion.MinAnswerSelectionMessage">
            <summary>
            Message show when not enough selections were
            selected in the question
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ActiveQuestion.MinSelectionRequired">
            <summary>
            Min. of selection required in the question
            (Fields are not checked)
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ActiveQuestion.ValidationMark">
            <summary>
            Validation mark shown near the question
            that requires answers
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ActiveQuestion.ValidationMarkStyle">
            <summary>
            Style used for the question's mark
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ActiveQuestion.ValidationMessageStyle">
            <summary>
            Style used for the question's error messages
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ActiveQuestion.VoterAnswersState">
            <summary>
            Global answers that a voter has answered 
            to the survey, used for piping in the answers 
            purposes, its optional and can be null
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.CreateChildControls">
            <summary>
            Compose all answer sections into a question
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.BuildQuestion">
            <summary>
            Build the question layout with its 
            child controls
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.BuildMultipleSections">
            <summary>
            Creates the section's container
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.GetSectionOptions(System.Int32,System.Int32)">
            <summary>
            Builds a section option table for the 
            given section number
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.AddSectionButton_Click(System.Object,System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            Adds / inserts a new full answer section
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.InsertSection(System.Int32)">
            <summary>
            Inserts a new section at the given 
            section number
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.GetUidForSection">
            <summary>
            Returns a random unique ID
            </summary>
            <returns>uId</returns>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.UidExists(System.Int32)">
            <summary>
            Checks if the Uid already exists in the section
            Uids collection to avoid duplicates
            </summary>
            <param name="uId"></param>
            <returns>true or false</returns>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.AddSection(System.Int32,System.Int32)">
            <summary>
            Adds a new section using the provided section Uid
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.RemoveSectionButton_Command(System.Object,System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            Deletes a section from the question
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.RemoveSection(System.Int32)">
            <summary>
            Creates and adds a new section 
            to the question
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.BuildSingleSection">
            <summary>
            Builds a answer's overview datagrid and 
            if required show an "add new" section
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.GetGridVoterAnswers">
            <summary>
            Parse the answer state and returns the 
            answers of this question
            </summary>
            <returns></returns>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.AnswersGrid_AddSection(System.Object,Votations.NSurvey.WebControls.UI.SectionAnswersItemEventArgs)">
            <summary>
            A new section has been requested on the grid.
            Show a "new section" area
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.AnswersGrid_EditSection(System.Object,Votations.NSurvey.WebControls.UI.SectionAnswersItemEventArgs)">
            <summary>
            A new section has been requested for edit
            Show a "new section" area with the section's answers
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.AnswersGrid_DeleteSection(System.Object,Votations.NSurvey.WebControls.UI.SectionAnswersItemEventArgs)">
            <summary>
            A section has been removed on the grid.
            Update the target section number if any was setup or
            show a "new section" area if the last section has
            been removed on the grid
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.SubmitSectionButton_Click(System.Object,System.EventArgs)">
            <summary>
            Add new posted answers to the section grid     
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.UpdateSectionButton_Click(System.Object,System.EventArgs)">
            <summary>
            Updates section grid with the posted answers
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.CancelSectionButton_Click(System.Object,System.EventArgs)">
            <summary>
            Cancel the "new section" area
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.ReBindGrid">
            <summary>
            Rebind grid based on posted answers
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.PostedAnswersHandler(Votations.NSurvey.Data.PostedAnswerDataCollection)">
            <summary>
            Handles posted answers and make sure
            to post answers if there aren't any in the section 
            or delete all unvalidated answers if answers exist
            in the section
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.DeleteSectionAnswers(System.Int32,Votations.NSurvey.Data.PostedAnswerDataCollection)">
            <summary>
            Removes all answers related to the target section number
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.OrderTargetSectionAnswers(System.Int32,Votations.NSurvey.Data.PostedAnswerDataCollection)">
            <summary>
            Reorder the posted section in the correct
            order based on the target section's new section number
            new section answers are marked with a -1 sectionnumber
            </summary>
            <param name="targetSection"></param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.GetSectionCountFromAnswers(Votations.NSurvey.Data.PostedAnswerDataCollection)">
            <summary>
            Returns the section based count on the 
            current posted answer's data, doesnt include
            the count of any "add new section" only counted
            are the section already posted, validated and stored in
            the grid
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.SwitchAnswerSectionNumber(System.Int32,System.Int32,Votations.NSurvey.Data.PostedAnswerDataCollection)">
            <summary>
            Change the all answers with the section number to the new section number
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.GetSectionUid(System.Int32)">
            <summary>
            Returns the exsiting Uid of the section
            if it doesnt exists creates a random
            UId and store it in the viewstate collection
            for futur postbacks
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.GetSectionCountFromState">
            <summary>
            Must returns the number of sections that 
            must be restored for this question, should 
            be based on the current answerstate
            </summary>
            <returns></returns>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.CreateSection(System.Int32,System.Int32)">
            <summary>
            Must return a new section
            populated with its answers or child questions
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.GetSectionAnswersGrid">
            <summary>
            Must return a valid grid that will be use in 
            grid section mode. Null can be returned if no 
            grid can be generated
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionQuestion.Section_ClientScriptGenerated(System.Object,Votations.NSurvey.WebControls.UI.QuestionItemClientScriptEventArgs)">
            <summary>
            Notify subscriber that a script has been generated
            for the given section
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionQuestion.SectionGridAnswersHeaderStyle">
            <summary>
            Sets the style for the section's answer grid header
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionQuestion.SectionGridAnswersItemStyle">
            <summary>
            Sets the style for the section's answer grid overview items 
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionQuestion.SectionGridAnswersAlternatingItemStyle">
            <summary>
            Sets the style for the section's answer grid overview items 
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionQuestion.SectionGridAnswersStyle">
            <summary>
            Sets the style for the section's answer grid table 
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionQuestion.MaxSections">
            <summary>
            how many section is the user allowed
            to create in this question
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionQuestion.RepeatMode">
            <summary>
            How the user can create sections 
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionQuestion.AddSectionLinkText">
            <summary>
            Text show to the user to add a new section
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionQuestion.DeleteSectionLinkText">
            <summary>
            Text show to the user to delete a section
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionQuestion.EditSectionLinkText">
            <summary>
            Text show to the user to edit a section in the grid
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionQuestion.UpdateSectionLinkText">
            <summary>
            Text show to the user to edit a section in the grid
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionQuestion.EnableGridSectionServerSideValidation">
            <summary>
            Enable server side validation of grid answer section items
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionQuestion.EnableGridSectionClientSideValidation">
            <summary>
            Enable client side validation of grid answer section items
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionQuestion.SectionCount">
            <summary>
            Number of sections owned by this question
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionQuestion.GridAnswers">
            <summary>
            Answers that will be shown in the section's 
            grid overview
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionQuestion.GridMode">
            <summary>
            In which state is the current grid
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionQuestion.SectionUids">
            <summary>
            Section Uids must be stored between
            postbacks to make sure that the section 
            control gets the correct uid back
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionQuestion.SectionOptionStyle">
            <summary>
            Style for the section's option row
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionQuestion.SectionTable">
            <summary>
            Contains all sections and section options
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionQuestion.TargetSection">
            <summary>
            To which section are the new answer 
            in the grid be assigned
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.GlobalRadioButton">
            <summary>
            This radio button is much like the built in <see cref="T:System.Web.UI.WebControls.RadioButton" /> control, but unlike it, has a <see cref="P:Votations.NSurvey.WebControls.UI.GlobalRadioButton.GroupName" /> that can be global, ignoring naming containers.
            </summary>
            <remarks>
            Be <b>very careful</b> when using this control, 
            as it is quite easy to break other controls on the page 
            because of the disrespect for naming containers in the "name" attribute of the rendered html input.
            </remarks>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.GlobalRadioButton.#ctor">
            <summary>
            Creates a new instance of the GlobalRadioButton class.
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.GlobalRadioButton.OnCheckedChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Votations.NSurvey.WebControls.UI.GlobalRadioButton.CheckedChanged" /> event.
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.GlobalRadioButton.OnPreRender(System.EventArgs)">
            <summary>
            Overrides the OnPreRender method.
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.GlobalRadioButton.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Overrides the Render method.
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.GlobalRadioButton.RenderInputTag(System.Web.UI.HtmlTextWriter,System.String)">
            <summary>
            Renders the input tag portion of the control.
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.GlobalRadioButton.RenderLabel(System.Web.UI.HtmlTextWriter,System.String,System.String)">
            <summary>
            Renders the label portion of the control.
            </summary>
        </member>
        <member name="E:Votations.NSurvey.WebControls.UI.GlobalRadioButton.CheckedChanged">
            <summary>
            The event that occurs when the checked property has changed.
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.GlobalRadioButton.AutoPostBack">
            <summary>
            Gets or sets a value indicating whether the state automatically posts back to the server when clicked.
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.GlobalRadioButton.Checked">
            <summary>
            Gets or sets a value indicating whether the control is checked.
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.GlobalRadioButton.GlobalGroup">
            <summary>
            Gets or sets if the GroupName will span across naming containers on the page.
            </summary>
            <remarks>
            Set this property to true to enable the "global" functionality of the control.
            Set this property to false to make it behave like a normal RadioButton.
            </remarks>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.GlobalRadioButton.GroupName">
            <summary>
            Gets or sets the name of the group that the radio button belongs to.
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.GlobalRadioButton.Text">
            <summary>
            Gets or sets the text label associated with the control.
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.GlobalRadioButton.TextAlign">
            <summary>
            Gets or sets the alignment of the text label associated with the control.
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.GlobalRadioButton.UniqueGroupName">
            <summary>
            Gets the group name for the control as it will exist in the name attribute of the html.
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.GlobalRadioButton.ValueAttribute">
            <summary>
            Gets the content to be put in the html value attribute.
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.SurveyBox">
            <summary>
            Renders the box with the survey's questions / answer.
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.#ctor">
            <summary>
            Web control constructor
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.BuildLanguageRequest">
            <summary>
            Builds the userlanguage request form
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.BuildSurveyBox(System.Boolean)">
            <summary>
            Builds the HTML to show the survey box
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.BuildThanksBox(System.Boolean)">
            <summary>
            Renders the thank you message box 
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.CleanVoterQuestionAnswers(Votations.NSurvey.WebControls.UI.QuestionItem)">
            <summary>
            Clean previous existing voter answers to avoid duplicates 
            or unchecked answer getting check when user uses
            navigation or resume modes
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.DeleteVoterAnswers(System.Int32)">
            <summary>
            Deletes the voter answers of a question
            this is required to avoid having selected answers
            that where unselected by user after restoring state 
            </summary>
            <param name="questionId">question from which we want to delete the voter answers</param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.GenerateClientSideValidationCode">
            <summary>
            Generates the complete client side javascript that will
            call the question's client side generated validation 
            methods
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.GetRandomSeedForQuestion">
            <summary>
            Return the current random seed for the question which 
            requires answer randomization
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.GetSurveyData">
            <summary>
            Retrieve all survey data from the db
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.InitSecurityAddIns">
            <summary>
            Get the security addins that where setup for this survey
            and retrieve create their type instance from the security factory
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.InsertQuestion(Votations.NSurvey.Data.QuestionData.QuestionsRow,System.Web.UI.Control,System.Boolean)">
            <summary>
            Get the webcontrol instance of the question BE and 
            adds it to the control hierarchie
            </summary>
            <param name="question"></param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.LoadResumeUidFromMedium">
            <summary>
            Loads the resume unique identifier and 
            if any available returns it else return null
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.OnAnswerPost(System.Object,Votations.NSurvey.WebControls.UI.QuestionItemAnswersEventArgs)">
            <summary>
            Store the answers received in a 
            temporary storage
            </summary>
            <param name="sender">The question that raised the event</param>
            <param name="e">Answers posted with the question</param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.OnClientScriptGeneration(System.Object,Votations.NSurvey.WebControls.UI.QuestionItemClientScriptEventArgs)">
            <summary>
            Build the client side calls to the questions
            that requires client script validation
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.OnFormSubmitted(Votations.NSurvey.WebControls.FormItemEventArgs)">
            <summary>
            Post an event when user data and answers 
            has been saved in the database
            </summary>
            <param name="e">The form answers and user info</param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.OnFormSubmitting(Votations.NSurvey.WebControls.FormItemEventArgs)">
            <summary>
            Post an event when user data and answers 
            has been saved in the database
            </summary>
            <param name="e">The form answers and user info</param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.OnInvalidAnswers(System.Object,Votations.NSurvey.WebControls.UI.QuestionItemInvalidAnswersEventArgs)">
            <summary>
            Set the control SelectionsAreRequired flag to true
            and stores the sender for futher processing
            </summary>
            <param name="sender">The question that raised the event</param>
            <param name="e">Answers, if any, posted with the question</param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.OnPageChangeClick(System.Object,System.EventArgs)">
            <summary>
            If all min/max selections are completed, 
            store the temp answers into the final storage 
            and loads the next set of questions and render the new page
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.OnPageChanged(Votations.NSurvey.WebControls.FormNavigationEventArgs)">
            <summary>
            Post an event when a page has changed
            </summary>
            <param name="e">The form answers, user and navigation info</param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.OnPageChanging(Votations.NSurvey.WebControls.FormNavigationEventArgs)">
            <summary>
            Post an event when a page is going to change
            </summary>
            <param name="e">The form answers, user and navigation info</param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.OnPreviousPageChangeClick(System.Object,System.EventArgs)">
            <summary>
            store the temp answers into the final storage 
            and loads the previous page set of questions
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.OnQuestionBound(Votations.NSurvey.WebControls.FormQuestionEventArgs)">
            <summary>
            Post an event when a question has been bound
            </summary>
            <param name="e">The form question</param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.OnQuestionCreated(Votations.NSurvey.WebControls.FormQuestionEventArgs)">
            <summary>
            Post an event when a new question has been added to the surveybox
            </summary>
            <param name="e">The form question</param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.OnResumeProgressClick(System.Object,System.EventArgs)">
            <summary>
            Shows the resume interface to let the user
            enter his resume code and resume the survey
            if he entered the correct code
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.OnSaveProgressClick(System.Object,System.EventArgs)">
            <summary>
            store the temp answers into the final storage 
            and save the current voter's answer state in the DB 
            to allow a resume when the voter comes back
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.OnSelectionRequired(System.Object,Votations.NSurvey.WebControls.UI.QuestionItemAnswersEventArgs)">
            <summary>
            Set the control SelectionsAreRequired flag to true
            and stores the sender for futher processing
            </summary>
            <param name="sender">The question that raised the event</param>
            <param name="e">Answers, if any, posted with the question</param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.OnSessionResumed(Votations.NSurvey.WebControls.FormSessionEventArgs)">
            <summary>
            Post an event when a session has been resumed
            </summary>
            <param name="e">The form answers, user and navigation info</param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.OnSessionResuming(Votations.NSurvey.WebControls.FormSessionEventArgs)">
            <summary>
            Post an event when a session is going to be resumed
            </summary>
            <param name="e">The form answers, user and navigation info</param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.OnSessionSaved(Votations.NSurvey.WebControls.FormSessionEventArgs)">
            <summary>
            Post an event when a session has been saved
            </summary>
            <param name="e">The form answers, user and navigation info</param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.OnSessionSaving(Votations.NSurvey.WebControls.FormSessionEventArgs)">
            <summary>
            Post an event when a session is going to be saved
            </summary>
            <param name="e">The form answers, user and navigation info</param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.OnVoterDataCreated(Votations.NSurvey.WebControls.FormItemEventArgs)">
            <summary>
            Post an event when user data have been created
            but at this point they aren't stored in the database 
            so the voter id is not the one that will be saved 
            in the database
            </summary>
            <param name="e">The form answers and user info</param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Generates the client validation
            script while rendering the page
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.RenderAtDesignTime">
            <summary>
            Renders the control in the designer
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.ResumeSession(System.String)">
            <summary>
            Try to resume a saved session
            </summary>
            <returns></returns>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.ReverseQuestionsNumbers">
            <summary>
            Renumber the questions from the 
            number that was available on the previous page
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.SaveResumeUidToMedium(System.String)">
            <summary>
            Save the resume unique identifier, returns 
            an error message in case the save failed
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.SecuritySetup(System.Boolean)">
            <summary>
            Setup the security context using the current addin
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.SetMultiLanguage">
            <summary>
            Check and set the multi language 
            features if there are enabled
            </summary>
            <returns>true if we need to show the dropdownlist selection to user </returns>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.SubmitAnswersToDb">
            <summary>
            Submits the answers to the database and ends the survey
            Depending on notification mode sends email message (3 options) to administrator
            Optionally redirects to new url
            Optionally shows thank you message to surveytaker
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.SurveyBox.UnLoadSecurityAddIns(Votations.NSurvey.Data.VoterAnswersData)">
            <summary>
            Unloads the available security addins and allow them
            to make some operations after the voter and its answers
            has been stored in the database
            </summary>
        </member>
        <member name="E:Votations.NSurvey.WebControls.SurveyBox.FormSubmitted">
            <summary>
            Allows gathering user's DB id and his answers 
            values after they has been saved in the DB
            </summary>
        </member>
        <member name="E:Votations.NSurvey.WebControls.SurveyBox.FormSubmitting">
            <summary>
            Allows gathering / changing of user's answers 
            values before they get saved in the DB
            </summary>
        </member>
        <member name="E:Votations.NSurvey.WebControls.SurveyBox.PageChanged">
            <summary>
            Allows gathering / changing of user's answers
            when he did the page switch
            </summary>
        </member>
        <member name="E:Votations.NSurvey.WebControls.SurveyBox.PageChanging">
            <summary>
            Allows gathering / changing of user's answers
            when he's going to do a page switch
            </summary>
        </member>
        <member name="E:Votations.NSurvey.WebControls.SurveyBox.QuestionBound">
            <summary>
            Allows gathering / changing of surveybox's question
            properties after they get bound to their control
            and answer items controls have benn generated
            </summary>
        </member>
        <member name="E:Votations.NSurvey.WebControls.SurveyBox.QuestionCreated">
            <summary>
            Allows gathering / changing of surveybox's question
            properties before they get bound to their control
            and answer items controls generated
            </summary>
        </member>
        <member name="E:Votations.NSurvey.WebControls.SurveyBox.SessionResumed">
            <summary>
            Allows gathering / changing of user's answers
            when the session has been resumed
            </summary>
        </member>
        <member name="E:Votations.NSurvey.WebControls.SurveyBox.SessionResuming">
            <summary>
            Allows gathering / changing of user's answers
            when the session is resuming
            </summary>
        </member>
        <member name="E:Votations.NSurvey.WebControls.SurveyBox.SessionSaved">
            <summary>
            Allows gathering / changing of user's answers
            when the session has been saved
            </summary>
        </member>
        <member name="E:Votations.NSurvey.WebControls.SurveyBox.SessionSaving">
            <summary>
            Allows gathering / changing of user's answers
            when the session is saving
            </summary>
        </member>
        <member name="E:Votations.NSurvey.WebControls.SurveyBox.VoterDataCreated">
            <summary>
            Allows gathering / changing of user's data 
            values after they have been created
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.AnswerStyle">
            <summary>
            Sets the style for the answers
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.ButtonStyle">
            <summary>
            Sets the style for the submit button
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.ButtonText">
            <summary>
            Text of the submit vote button
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.CellPadding">
            <summary>
            CellPadding of the survey box table
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.CellSpacing">
            <summary>
            CellSpacing of the survey box table
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.ConfirmationMessageStyle">
            <summary>
            Style of the confirmation messages of the survey and questions
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.Controls">
            <summary>
            Override control collection and return base collection
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.CurrentPageIndex">
            <summary>
            Page to display
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.CurrentSecurityAddIn">
            <summary>
            Security AddIn to show
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.EnableValidation">
            <summary>
            Enable client side validation of some answers 
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.FootStyle">
            <summary>
            Sets the style for the results footer
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.LanguageCode">
            <summary>
            In which language should it run ?
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.MatrixAlternatingItemStyle">
            <summary>
            Sets the style for the matrix items 
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.MatrixHeaderStyle">
            <summary>
            Sets the style for the matrix header
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.MatrixItemStyle">
            <summary>
            Sets the style for the matrix items 
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.MatrixStyle">
            <summary>
            Sets the style for the matrix table 
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.NextPageText">
            <summary>
            Text of the next page button
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.PageNavigationHistory">
            <summary>
            Keeps track of each page number
            that was shown. Used when navigation
            is activated to disable / enable the 
            default answer values on pages that were 
            already visited or nor. 
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.PreviousPageText">
            <summary>
            Text of the previous question button
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.QuestionNumber">
            <summary>
            Current question numbering state
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.QuestionStyle">
            <summary>
            Sets the style for the question
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.QuestionValidationMark">
            <summary>
            Text of the submit vote button
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.QuestionValidationMarkStyle">
            <summary>
            Style of the validation mark of a question
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.QuestionValidationMessageStyle">
            <summary>
            Style of the validation error messages of a question
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.ResumeProgressText">
            <summary>
            Text of the resume progress button
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.SaveProgressText">
            <summary>
            Text of the save progress button
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.SectionGridAnswersAlternatingItemStyle">
            <summary>
            Sets the style for the section's answer grid overview items 
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.SectionGridAnswersHeaderStyle">
            <summary>
            Sets the style for the section's answer grid header
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.SectionGridAnswersItemStyle">
            <summary>
            Sets the style for the section's answer grid overview items 
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.SectionGridAnswersStyle">
            <summary>
            Sets the style for the section's answer grid table 
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.SectionOptionStyle">
            <summary>
            Style used for the question's mark
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.ShowOnlyPercent">
            <summary>
            Show only percents and not vote details
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.SurveyId">
            <summary>
            Id of the survey you wish to render
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.TotalPageNumber">
            <summary>
            Total of questions pages in the survey
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.SurveyBox.VoterAnswers">
            <summary>
            Contains all the answers to all
            questions given by the current voter
            </summary>
        </member>
        <member name="T:Votations.NSurvey.Web.NSurveyContext">
            <summary>
            Provides a global context of NSurvey settings 
            during an HTTP request
            </summary>
        </member>
        <member name="P:Votations.NSurvey.Web.NSurveyContext.User">
            <summary>
            Currently logged user with its
            nsurvey
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.FormItemEventArgs">
            <summary>
            Provide data for the submit events on the
            survey box
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.FormNavigationEventArgs">
            <summary>
            Provide data for the question next / previous page navigation events on the
            survey box
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.FormQuestionEventArgs">
            <summary>
            Provide data for the question creation and bound events on the
            survey box
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.FormSessionEventArgs">
            <summary>
            Provide data for the session (resume load / save) events on the
            survey box
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.SurveyBoxDesigner">
            <summary>
            Implements the advanced designer services
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerProperties.#ctor">
            <summary>
            Creates an empty property collection
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerProperties.#ctor(System.Int32)">
            <summary>
            Restore collection for the given answer id
            </summary>
            <param name="answerId"></param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerProperties.Deserialize(System.Int32)">
            <summary>
            Deserialize the properties from the datastore and 
            populate the local properties
            </summary>
            <param name="answerId">answer owner of the properties</param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerProperties.Serialize(System.Int32)">
            <summary>
            Serialize the properties in the datastore
            </summary>
            <param name="answerId">answer owner of the properties</param>
        </member>
        <member name="T:Votations.NSurvey.Data.GridAnswerData">
            <summary>
            Answer that is stored in a section grid 
            </summary>
        </member>
        <member name="T:Votations.NSurvey.Data.PostedAnswerData">
            <summary>
            Answer posted by a question 
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.IAnswerSubscriber">
            <summary>
            Define the properties that are required for a class 
            that wants to be able to subscribe to answer published
            by other answers.
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.ISelectionControl">
            <summary>
            Internal ... Used by selection item to allow 
            the parent control to get selected state of the
            control that implements it
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.AnswerBooleanItem">
            <summary>
            Boolean checkbox item
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerBooleanItem.CreateChildControls">
            <summary>
            Creates the checkbox control "layout" and adds
            it to the overall control tree
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerBooleanItem.GetPostedAnswerData">
            <summary>
            Returns the check box status to the event subscribers 
            once the survey's page get posted
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.AnswerConnection">
            <summary>
            Makes to link answer publishers to answer subscribers
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.AnswerDataSourceItem">
            <summary>
            Base class for the answer types based on an 
            external data source
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.AnswerDataSourceItem.DataSource">
            <summary>
            Data source info to feed the answers
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.AnswerFieldCalendarItem">
            <summary>
            Calendar example that inherits a textbox behaviors and adds a calendar to
            to it
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerFieldCalendarItem._calendar_SelectionChanged(System.Object,System.EventArgs)">
            <summary>
            Set the value of the textbox to the selected date
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerFieldCalendarItem.CreateChildControls">
            <summary>
            Create the textbox field from the base 
            and adds the calendar button and calendar
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.AnswerFieldHiddenItem">
            <summary>
            A hidden field, mainly use to get / store default text
            values that were setup using the query string, 
            session or server variable values
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerFieldHiddenItem.CreateChildControls">
            <summary>
            Create the "layout" and adds the textbox control to the 
            control tree
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerFieldHiddenItem.GetPostedAnswerData">
            <summary>
            Returns	the default answer text that was 
            filled with the correct template value specified
            by the user
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerFieldHiddenItem.GetUserAnswers">
            <summary>
            Returns the answeritem user's answers
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.AnswerFieldPasswordItem">
            <summary>
            A hidden field, mainly used to get / store default text
            values that were setup using the query string, 
            session or server variable values
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerFieldPasswordItem.CreateChildControls">
            <summary>
            Create the "layout" and adds the textbox control to the 
            control tree
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.AnswerPublisherEventHandler">
            <summary>
            Events published by the answer item to its subscribers
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.AnswerItemMessageEventArgs">
            <summary>
            Allow an answer item to create a custom information message
            and send it to the container
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.AnswerListItem.AnswerItems">
            <summary>
            Collection of answeritem that will be listed 
            in the dropdownlist
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerSelectionItem.GenerateSelectionControl(System.Web.UI.ControlCollection)">
            <summary>
            Generates a selection control (Radio, checkbox) and adds
            it to the container
            </summary>
            <param name="container"></param>
            <returns>true if a selection control was added</returns>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerSelectionItem.GetPostedAnswerData">
            <summary>
            Returns the answer if it was checked
            </summary>
            <returns></returns>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.AnswerOtherFieldItem">
            <summary>
            Other answer type field
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerOtherFieldItem.GetControlIdToValidate">
            <summary>
            Returns the control ID and 
            ensures the current control has children,
            then get the field unique ID in the control tree.
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerOtherFieldItem.OnPreRender(System.EventArgs)">
            <summary>
            Generates the validation javascript
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerOtherFieldItem.ServerValidation">
            <summary>
            Validate user answers
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.AnswerSqlItem">
            <summary>
            Base class for the Sql based answer types
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerSqlItem.GetSqlRequestDataSet">
            <summary>
            executes the statement and fill a dataset with
            the result of the statement
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.AnswerSqlListItem">
            <summary>
            Xml based dropdown list answer type that
            feed a dropdownlist with the xml loaded by 
            the parent class 
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerSqlListItem.GenerateSqlControl(System.Data.DataSet)">
            <summary>
            Implemented from the abstract method of the parent class
            Is called to generate the "layout" and to place the child 
            controls (eg:dropdownlist) in the tree
            </summary>
            <param name="sqlResults">a dataset containing the results to process</param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerSqlListItem.GetPostedAnswerData">
            <summary>
            Returns the selected value of the dropdown to the subscribers
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerSqlListItem.GetUserAnswers">
            <summary>
            Returns the answeritem user's answers
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.AnswerSubscriberXmlListItem">
            <summary>
            Subscriber Xml type, this types can be used to subscribe 
            to another type that publish answer and use this answer 
            as an input file to populate the dropdownlist
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerSubscriberXmlListItem.BindDropDownList(Votations.NSurvey.Data.NSurveyDataSource)">
            <summary>
            Binds dropdownlist with the xml answers loaded 
            from the publisher xml file value
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerSubscriberXmlListItem.GenerateDropDownList">
            <summary>
            Builds and populates the dropdown list with the current 
            Xml filename gathered from the answer publisher
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerSubscriberXmlListItem.GetAnswerValues">
            <summary>
            Retrieves the available postback values
            </summary>
            <returns></returns>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerSubscriberXmlListItem.GetPostedAnswerData">
            <summary>
            Retur	ns the selected value of the dropdown to the subscribers
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerSubscriberXmlListItem.ProcessPublishedAnswers(System.Object,Votations.NSurvey.WebControls.UI.AnswerItemEventArgs)">
            <summary>
            Gets the answer send by the publisher and use
            them as the source name of the xml file to load
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerSubscriberXmlListItem.PublisherCreation(System.Object,Votations.NSurvey.WebControls.UI.AnswerItemEventArgs)">
            <summary>
            Trigger event when a publisher has been created, usually 
            at the end of a CreateChildControl call. This call is 
            mandatory to catch Answer items that have set default values 
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.AnswerSubscriberXmlListItem.XmlFileName">
            <summary>
            Name of the xml file to load.
            </summary>
            <remarks>
            As ProcessPublishedAnswers is called
            during postback we have to keep the name in the viewstate
            in order to bind the dropdownlist with the correct
            data to retrieve its selected value when the user
            does a postback.
            </remarks>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.AnswerUploadItem">
            <summary>
            File upload answer item
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerUploadItem.CreateChildControls">
            <summary>
            Creates the checkbox control "layout" and adds
            it to the overall control tree
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerUploadItem.downloadButton_Command(System.Object,System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            Sends the file to the client
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerUploadItem.GeneratePropertiesUI">
            <summary>
            Generates the interface to set the 
            extended properties (file size, file number etc ...)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerUploadItem.GetPostedAnswerData">
            <summary>
            Returns the check box status to the event subscribers 
            once the survey's page get posted
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerUploadItem.SetupFormEncoding">
            <summary>
            Upload field needs a special enctype 
            to work and allow multipart mimes
            to be able to receive the file
            </summary>
            <returns></returns>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerUploadItem.ValidateUpload">
            <summary>
            Valdidates the upload against the answer item
            properties
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.AnswerUploadItem.AcceptedContentType">
            <summary>
            What files are accepted, list must be a comma separated list
            eg : application/pdf, image/gif
            etc ...
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.AnswerUploadItem.GroupGuid">
            <summary>
            Guid that allows to group several
            file uploads under the same answer and to retrieve
            already saved files in the database when a user
            resumes or does a page change or session resume
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.AnswerUploadItem.Mandatory">
            <summary>
            Is a file upload mandatory ?
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.AnswerUploadItem.MaxFileNumber">
            <summary>
            Maximum of files that can be uploaded
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.AnswerUploadItem.MaxFileSize">
            <summary>
            Maximum of size an upload file can have
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.AnswerXmlItem">
            <summary>
            Base class for the Xml based answer types
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.AnswerXmlListItem">
            <summary>
            Xml based dropdown list answer type that
            feed a dropdownlist with the xml loaded by 
            the parent class 
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerXmlListItem.GenerateXmlControl(Votations.NSurvey.Data.NSurveyDataSource)">
            <summary>
            Implemented from the abstract method of the parent class
            Is called to generate the "layout" and to place the child 
            controls (eg:dropdownlist) in the tree
            </summary>
            <param name="xmlAnswers">the xml items loaded from the xml datasource file</param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerXmlListItem.GetPostedAnswerData">
            <summary>
            Returns the selected value of the dropdown to the subscribers
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerXmlListItem.GetUserAnswers">
            <summary>
            Returns the answeritem user's answers
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.SectionAnswersEventHandler">
            <summary>
            Events published by the answer item to its subscribers
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.SectionAnswersGridItem">
            <summary>
            Store a list of answers posted by the user
            in a section and show an overview of all
            answers / sections in a grid
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionAnswersGridItem.AddSectionGridButton_Click(System.Object,System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            A new section has been requested
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionAnswersGridItem.CreateChildControls">
            <summary>
            Creates the grid control "layout" and adds
            it to the overall control tree
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionAnswersGridItem.DeleteSectionGridButton_Click(System.Object,System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            A section must be deleted
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionAnswersGridItem.EditSectionGridButton_Click(System.Object,System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            A section edit has been requested
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionAnswersGridItem.GetPostedAnswerData">
            <summary>
            Returns the all answers stored in the grid to the event subscribers 
            once the survey's page get posted
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionAnswersGridItem.GetSectionAnswerIndex(System.Int32,System.Int32)">
            <summary>
            Return the index of the give answer id in its section
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionAnswersGridItem.GetSectionAnswers(System.Int32)">
            <summary>
            Returns only specific section number answers
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionAnswersGridItem.GetSectionCount">
            <summary>
            Returns the section count based on the 
            current GridVoterAnswers content
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionAnswersGridItem.OnSectionAdd(Votations.NSurvey.WebControls.UI.SectionAnswersItemEventArgs)">
            <summary>
            Post an event to notify subscribers that a new section
            must be shown
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionAnswersGridItem.OnSectionDelete(Votations.NSurvey.WebControls.UI.SectionAnswersItemEventArgs)">
            <summary>
            Post an event to notify subscribers that a section
            has been deleted
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionAnswersGridItem.OnSectionEdit(Votations.NSurvey.WebControls.UI.SectionAnswersItemEventArgs)">
            <summary>
            Post an event to notify subscribers that a section
            need to be edited
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SectionAnswersGridItem.SwitchAnswerSectionNumber(System.Int32,System.Int32)">
            <summary>
            Change the all answers with the section number to the new section number
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionAnswersGridItem.AddSectionLinkText">
            <summary>
            Text show to the user to add a new section
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionAnswersGridItem.Answers">
            <summary>
            Answers infos 
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionAnswersGridItem.DeleteSectionLinkText">
            <summary>
            Text show to the user to delete a section
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionAnswersGridItem.EditSectionLinkText">
            <summary>
            Text show to the user to edit a section
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionAnswersGridItem.GridAnswers">
            <summary>
            Answers that will be shown in the section's 
            grid overview
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionAnswersGridItem.GridVoterAnswers">
            <summary>
            Contains all the answers to all
            sections
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionAnswersGridItem.MaxSections">
            <summary>
            how many section is the user allowed
            to create
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionAnswersGridItem.SectionGridAnswersAlternatingItemStyle">
            <summary>
            Sets the style for the section's answer grid overview items 
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionAnswersGridItem.SectionGridAnswersHeaderStyle">
            <summary>
            Sets the style for the section's answer grid header
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionAnswersGridItem.SectionGridAnswersItemStyle">
            <summary>
            Sets the style for the section's answer grid overview items 
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionAnswersGridItem.SectionGridAnswersStyle">
            <summary>
            Sets the style for the section's answer grid table 
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionAnswersItemEventArgs.SectionAnswers">
            <summary>
            Posted answers related to this section
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SectionAnswersItemEventArgs.SectionNumber">
            <summary>
            The section number to which this event is related
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.SelectionRadioButton">
            <summary>
            Summary description for SelectionRadioButton.
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.QuestionItemAnswersEventArgs">
            <summary>
            Provide data for the overflow and answer missing events
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.QuestionItemClientScriptEventArgs">
            <summary>
            Provide data for the client script generation event
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.QuestionItemClientScriptEventArgs.ClientScript">
            <summary>
            Generated script
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.QuestionItemClientScriptEventArgs.Section">
            <summary>
            Which section is holding the answer item
            that has generated the script
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.QuestionItemInvalidAnswersEventArgs">
            <summary>
            Provide data for the invalid answer events
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.MatrixQuestion">
            <summary>
            Matrix layout question control which holds
            child questions
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.MatrixQuestion.CreateSection(System.Int32,System.Int32)">
            <summary>
            Creates a new matrix section 
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.MatrixQuestion.GetMatrixSection(Votations.NSurvey.Data.MatrixChildQuestionData,System.Int32,System.Int32)">
            <summary>
            Parse an MatrixChildCollection, converts the data 
            to webcontrols and returns a filled matrix section
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.MatrixQuestion.GetSectionCountFromState">
            <summary>
            Returns the number of sections that 
            must be restored for this matrix question based
            on the current answer state
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.MatrixQuestion.MaxSelectionsReached(Votations.NSurvey.Data.PostedAnswerDataCollection)">
            <summary>
            Check if any selection was left
            </summary>
            <param name="questionEventArgs"></param>
            <returns></returns>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.MatrixQuestion.MinSelectionsRequired(Votations.NSurvey.Data.PostedAnswerDataCollection)">
            <summary>
            Check if any selection was left
            </summary>
            <param name="questionEventArgs"></param>
            <returns></returns>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.MatrixQuestion.DataSource">
            <summary>
            Datasource that contains the answers, at this
            time it must be of an MatrixChildQuestionData type 
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.MatrixQuestion.MatrixAlternatingItemStyle">
            <summary>
            Sets the style for the matrix items 
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.MatrixQuestion.MatrixHeaderStyle">
            <summary>
            Sets the style for the matrix header
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.MatrixQuestion.MatrixItemStyle">
            <summary>
            Sets the style for the matrix items 
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.MatrixQuestion.MatrixStyle">
            <summary>
            Sets the style for the matrix table 
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.CheckBoxMatrixQuestion">
            <summary>
            Matrix layout question control which holds
            child questions
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.CheckBoxMatrixQuestion.GetMatrixSection(Votations.NSurvey.Data.MatrixChildQuestionData,System.Int32,System.Int32)">
            <summary>
            Parse an MatrixChildCollection, converts the data 
            to webcontrols and returns a filled matrix section
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.MatrixChildQuestion.Answers">
            <summary>
            Answer items collection that will be used
            as child controls
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.SingleQuestion">
            <summary>
            Abstract class that questions which 
            offer all services required to generate
            single question's answer sections
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SingleQuestion.CountSectionSelections(Votations.NSurvey.Data.PostedAnswerDataCollection)">
            <summary>
            Returns a hashtable containing using the section 
            number as hash key which each value being the number 
            of answers
            </summary>
            <param name="answers"></param>
            <returns></returns>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SingleQuestion.CreateSection(System.Int32,System.Int32)">
            <summary>
            Creates a new section of answers
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SingleQuestion.GetAnswerSection(Votations.NSurvey.Data.AnswerData,System.Int32,System.Int32)">
            <summary>
            Parse an AnswerDataCollection, converts the data 
            to webcontrols and returns a filled answer section
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SingleQuestion.GetSectionCountFromState">
            <summary>
            Returns the highest section available in the 
            current voter answer state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SingleQuestion.MaxSelectionsReached(Votations.NSurvey.Data.PostedAnswerDataCollection)">
            <summary>
            Check if too much selections were made
            </summary>
            <param name="questionEventArgs"></param>
            <returns></returns>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.SingleQuestion.MinSelectionsRequired(Votations.NSurvey.Data.PostedAnswerDataCollection)">
            <summary>
            Check if any selection was left
            </summary>
            <param name="questionEventArgs"></param>
            <returns></returns>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SingleQuestion.AnswerConnections">
            <summary>
            List of answer publisher that have to be linked
            to their subscribers
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SingleQuestion.Answers">
            <summary>
            Answer items collection that will be used
            as child controls
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SingleQuestion.ColumnsNumber">
            <summary>
            How many columns of answers will be rendered 
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SingleQuestion.DataSource">
            <summary>
            Datasource that contains the answers, at this
            time it must be of an AnswerDataCollection type 
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.SingleQuestion.LayoutMode">
            <summary>
            How will the answers of the control be rendered 
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.CheckBoxQuestion">
            <summary>
            Checkbox (multiple choices) layout question control
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.CheckBoxQuestion.GetAnswerSection(Votations.NSurvey.Data.AnswerData,System.Int32,System.Int32)">
            <summary>
            Parse an AnswerDataCollection, 
            converts the data to webcontrols and assign them to a new section
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.DropDownQuestion">
            <summary>
            DropdownList layout question control
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.DropDownQuestion.GetAnswerSection(Votations.NSurvey.Data.AnswerData,System.Int32,System.Int32)">
            <summary>
            Parse an AnswerDataCollection, 
            converts the data to webcontrols and assign them to a new section
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.RadioButtonQuestion">
            <summary>
            Radiobutton (single choices) layout question control
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.RadioButtonQuestion.GetAnswerSection(Votations.NSurvey.Data.AnswerData,System.Int32,System.Int32)">
            <summary>
            Parse an AnswerDataCollection, 
            converts the data to webcontrols and assign them to a new section
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.StaticQuestion">
            <summary>
            Renders a the question as basic static text
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.RatingBar">
            <summary>
            Result bar control to render a results bar
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.RatingBar.MaxRating">
            <summary>
            Max. rating
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.RatingBar.Rating">
            <summary>
            Current rating
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.RatingBar.RatingPercent">
            <summary>
            Rating percent
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.RatingBar.TableWidth">
            <summary>
            Width of the table container, used 
            to scale the bars to the container size
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.ResultItem">
            <summary>
            Graphical result for a question
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.ResultItem.OnDataBinding(System.EventArgs)">
            <summary>
            Check if any datasource has been set and 
            builds the results table
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.ResultItem.#ctor">
            <summary>
            Web control constructor
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.ResultItem.RenderAtDesignTime">
            <summary>
            Renders the control in the designer
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ResultItem.ShowOnlyPercent">
            <summary>
            Show only percents and not vote details
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ResultItem.CellSpacing">
            <summary>
            CellSpacing of the poll box table
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ResultItem.CellPadding">
            <summary>
            CellPadding of the poll box table
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ResultItem.BarColor">
            <summary>
            Color of the results bars
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ResultItem.HeadStyle">
            <summary>
            Sets the style for the title
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ResultItem.FootStyle">
            <summary>
            Sets the style of the results footer
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ResultItem.QuestionStyle">
            <summary>
            Sets the style for the question
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ResultItem.AnswerStyle">
            <summary>
            Sets the style for the answers
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ResultItem.ButtonStyle">
            <summary>
            Sets the style for the submit button
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ResultItem.DataSource">
            <summary>
            Datasource that contains the answers, at this
            time it must be of an AnswerDataCollection type 
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ResultItem.Controls">
            <summary>
            Override control collection and return base collection
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.ResultsBar">
            <summary>
            Result bar control to render a results bar
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ResultsBar.Progress">
            <summary>
            Current progress of the bar out of 100%
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.ResultsBar.TableWidth">
            <summary>
            Width of the table container, used 
            to scale the bars to the container size
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.Section">
            <summary>
            Abstract class required to get 
            a question's section behavior
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.Section.GenerateClientSideValidationCode">
            <summary>
            Each section must generates 
            its own client side validation script for the answers / fields
            that requires it, returns null if section doesnt have any validation.
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.Section.GeneratesClientSideScript">
            <summary>
            Does the section generates any client side validation script ?
            </summary>
            <returns></returns>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.Section.OnClientScriptGeneration(Votations.NSurvey.WebControls.UI.QuestionItemClientScriptEventArgs)">
            <summary>
            Post an event when a client script has been generated
            </summary>
            <param name="e">Question's invalid answers args</param>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.Section.EnableClientSideValidation">
            <summary>
            Enable client side validation of answers which needs it
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.Section.SectionNumber">
            <summary>
            Section index in the section collection
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.Section.SectionUid">
            <summary>
            Unique id to identify the webcontrol in the tree
            section number could not be used because we one 
            section would be removed we re-order the section 
            number and viewstate would be lost
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.AnswerSection">
            <summary>
            Abstract class required to get 
            a single question's answer section behavior
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerSection.GenerateClientSideValidationCode">
            <summary>
            Parse the answer collection and generates 
            the question client side validation script for the answers / fields
            of sections that require it.
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerSection.GeneratesClientSideScript">
            <summary>
            Does the section generates any client side validation script ?
            </summary>
            <returns></returns>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.AnswerSection.GenerateSection">
            <summary>
            Must returns a control (table, placeholder ...) that
            represents the section to be insered in the question
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.AnswerSection.AnswerConnections">
            <summary>
            List of answer publisher that have to be linked
            to their subscribers
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.AnswerSection.Answers">
            <summary>
            Answer items collection that will be used
            in this section
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.AnswerSection.AnswerStyle">
            <summary>
            Style used for the answers
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.AnswerSection.ColumnsNumber">
            <summary>
            How many columns of answers will be rendered 
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.AnswerSection.LayoutMode">
            <summary>
            How will the answers of the control be rendered 
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.CheckBoxAnswerSection">
            <summary>
            Section of answer with checkbox selection
            mode
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.CheckBoxAnswerSection.BuildHorizontalSelectionLayout">
            <summary>
            Builds a vertical table containing all the 
            answer items
            </summary>
            <returns>An horizontal table with all the answer items</returns>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.CheckBoxAnswerSection.BuildVerticalSelectionLayout">
            <summary>
            Builds a vertical table containing all the 
            answer items
            </summary>
            <returns>An horizontal table with all the answer items</returns>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.CheckBoxAnswerSection.GenerateSection">
            <summary>
            Build a selection layout with
            the question's answeritem child controls
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.DropDownAnswerSection">
            <summary>
            Section of answer with dropdown selection
            mode
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.DropDownAnswerSection.BuildHorizonalListLayout">
            <summary>
            Build an horizontal list layout with
            the question's answeritem child controls
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.DropDownAnswerSection.BuildVerticalListLayout">
            <summary>
            Build an vertical list layout with
            the question's answeritem child controls
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.DropDownAnswerSection.GenerateSection">
            <summary>
            Build a selection layout with
            the question's answeritem child controls
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.MatrixSection">
            <summary>
            Generates a matrix style layout
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.MatrixSection.BuildMatrixLayout">
            <summary>
            Build a selection layout with
            the question's answeritem child controls
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.MatrixSection.GenerateClientSideValidationCode">
            <summary>
            Parse the answer collection and generates 
            the question client side validation script for the answers / fields
            of sections that require it.
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.MatrixSection.GeneratesClientSideScript">
            <summary>
            Does the section generates any client side validation script ?
            </summary>
            <returns></returns>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.MatrixSection.MatrixAlternatingItemStyle">
            <summary>
            Sets the style for the matrix items 
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.MatrixSection.MatrixHeaderStyle">
            <summary>
            Sets the style for the matrix header
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.MatrixSection.MatrixItemStyle">
            <summary>
            Sets the style for the matrix items 
            </summary>
        </member>
        <member name="P:Votations.NSurvey.WebControls.UI.MatrixSection.MatrixStyle">
            <summary>
            Sets the style for the matrix table 
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.RadioButtonAnswerSection">
            <summary>
            Section of answer with radio selection
            mode
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.RadioButtonAnswerSection.BuildHorizontalSelectionLayout">
            <summary>
            Builds a vertical table containing all the 
            answer items
            </summary>
            <returns>An horizontal table with all the answer items</returns>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.RadioButtonAnswerSection.BuildVerticalSelectionLayout">
            <summary>
            Builds a vertical table containing all the 
            answer items
            </summary>
            <returns>An horizontal table with all the answer items</returns>
        </member>
        <member name="M:Votations.NSurvey.WebControls.UI.RadioButtonAnswerSection.GenerateSection">
            <summary>
            Build a selection layout with
            the question's answeritem child controls
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControls.UI.SectionCollection">
            <summary>
            Collection of question's sections
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControlsFactories.AnswerItemFactory">
            <summary>
            Creates a new answer item instance from the db answer data
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControlsFactories.AnswerItemFactory.BindSubscribersToPublishers(Votations.NSurvey.WebControls.UI.AnswerItemCollection)">
            <summary>
            Subsribe the answer items which require it to the correct
            answer publisher controls
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControlsFactories.AnswerItemFactory.Create(Votations.NSurvey.Data.AnswerData.AnswersRow,Votations.NSurvey.WebControls.UI.QuestionItem,Votations.NSurvey.WebControls.UI.Section,Votations.NSurvey.Data.AnswerSelectionMode,System.Web.UI.WebControls.Style,Votations.NSurvey.Data.ControlRenderMode,System.String,System.String,System.Boolean,Votations.NSurvey.Data.VoterAnswersData.VotersAnswersDataTable,System.Boolean)">
            <summary>
            Creates a new answer item instance from the db answer data
            </summary>
            <param name="answer">The data source to create the instance from</param>
            <param name="question">The question container</param>
            <param name="defaultSelectionMode">The default selection mode for the 
            item (Radio, checkbox etc...)</param>
            <param name="parentControlUniqueID">
            Unique ID required to identify global selection groups 
            like radiobutton groups
            </param>
            <param name="showAnswerText">
            Assigns the text to the answeritem control ?
            </param>
            <param name="enableDefaults">
            Does the answer set the user default values of fields to the answer web controls
            </param>
        </member>
        <member name="M:Votations.NSurvey.WebControlsFactories.AnswerItemFactory.CreateAnswerItemCollection(Votations.NSurvey.Data.AnswerData,Votations.NSurvey.WebControls.UI.QuestionItem,Votations.NSurvey.WebControls.UI.Section,Votations.NSurvey.Data.AnswerSelectionMode,System.Web.UI.WebControls.Style,Votations.NSurvey.Data.ControlRenderMode,System.String,System.String,System.Boolean,Votations.NSurvey.Data.VoterAnswersData.VotersAnswersDataTable,System.Boolean)">
            <summary>
            Parse an AnswerDataCollection, converts the data and
            returns an AnswerItemCollection filled with the correct 
            child controls
            </summary>
            <param name="answers">A collection of answerdata entities</param>
            <param name="defaultSelectionMode">The default selection mode for the 
            item (Radio, checkbox etc...)</param>
            <param name="parentcontrolUniqueID">
            Unique ID required to identify global groups 
            like radiobutton groups
            </param>
            <param name="showAnswerText">
            Assigns the text to the answeritem control ?
            </param>
            <param name="voterAnswersState">
            Current state of answers, used for piping. If not available
            leave it to null 
            </param>
            <param name="enableDefaults">
            Does the answer set the user default values of fields to the answer web controls
            </param>
            <returns>A collection of answeritem web controls</returns>
        </member>
        <member name="M:Votations.NSurvey.WebControlsFactories.AnswerItemFactory.GetAnswerItem(Votations.NSurvey.WebControls.UI.AnswerItemCollection,System.Int32)">
            <summary>
            Retrieves the given answer item from the control collection
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControlsFactories.AnswerItemFactory.GetUserText(System.Int32,System.Int32,Votations.NSurvey.Data.VoterAnswersData.VotersAnswersDataTable)">
            <summary>
            Returns, if any, the text entered by the user
            </summary>
            <param name="answer"></param>
            <param name="voterAnswersState"></param>
            <returns></returns>
        </member>
        <member name="M:Votations.NSurvey.WebControlsFactories.AnswerItemFactory.IsUserSelected(System.Int32,System.Int32,Votations.NSurvey.Data.VoterAnswersData.VotersAnswersDataTable)">
            <summary>
            Returns if answer has been selected by the user
            </summary>
            <param name="answer"></param>
            <param name="voterAnswersState"></param>
            <returns></returns>
        </member>
        <member name="M:Votations.NSurvey.WebControlsFactories.AnswerItemFactory.ParseDefaultAnswerText(System.Int32,System.String,Votations.NSurvey.Data.VoterAnswersData.VotersAnswersDataTable,System.String)">
            <summary>
            Parse the given string and replace any
            available templates by their runtime values
            </summary>
        </member>
        <member name="T:Votations.NSurvey.WebControlsFactories.QuestionItemFactory">
            <summary>
            Create a web control compatible instance 
            of the given question.
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControlsFactories.QuestionItemFactory.CreateQuestionChildCollection(Votations.NSurvey.Data.MatrixChildQuestionData,Votations.NSurvey.WebControls.UI.Section,System.String,System.String,Votations.NSurvey.Data.AnswerSelectionMode,System.Web.UI.WebControls.Style,Votations.NSurvey.Data.ControlRenderMode,Votations.NSurvey.Data.VoterAnswersData.VotersAnswersDataTable,System.Boolean)">
            <summary>
            Converts a stronlgy typed MatrixChildQuestionData dataset
            to a webcontrol collection
            </summary>
            <param name="childQuestions">The questions / answers data</param>
            <param name="parentControlUniqueID">
            Unique ID required to identify global groups 
            like radiobutton groups
            </param>
            <returns>a web control collection of MatrixChildQuestion</returns>
        </member>
        <member name="T:Votations.NSurvey.WebControlsFactories.SubscriberItemFactory">
            <summary>
            Creates a new answer item instance from the db answer data
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControlsFactories.SubscriberItemFactory.ActivateAnswerConnections(Votations.NSurvey.WebControls.UI.AnswerConnectionsCollection,Votations.NSurvey.WebControls.UI.AnswerItemCollection)">
            <summary>
            Subscribe the answer items which require it to the correct
            answer publisher controls defined as defined by the Subscriber collection
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControlsFactories.SubscriberItemFactory.Create(System.Int32,System.Int32)">
            <summary>
            Creates a simple subscriber item that can be 
            used to connect a question's answer to another
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControlsFactories.SubscriberItemFactory.CreateSubscriberItemCollection(System.Int32)">
            <summary>
            Builds an answer connections collection that can be used
            to connect question's answer together
            </summary>
        </member>
        <member name="M:Votations.NSurvey.WebControlsFactories.SubscriberItemFactory.GetAnswerItem(Votations.NSurvey.WebControls.UI.AnswerItemCollection,System.Int32)">
            <summary>
            Retrieves the given answer item from the control collection
            </summary>
        </member>
        <member name="T:Votations.NSurvey.GlobalConfig">
            <summary>
            Provides an abstraction layer for all your web.config or machine.config
            settings
            </summary>
        </member>
        <member name="P:Votations.NSurvey.GlobalConfig.ImagesPath">
            <summary>
            Path of where you have copied your images
            that was specified in your machine.config or web.config file
            </summary>
        </member>
        <member name="P:Votations.NSurvey.GlobalConfig.LanguagesPath">
            <summary>
            Path of the Xml languages files
            </summary>
        </member>
        <member name="P:Votations.NSurvey.GlobalConfig.SessionUploadedFileDeleteTimeOut">
            <summary>
            How many hours can uploaded files for sessions that has no 
            yet been resumed stay in the database. Leave some time
            because user wont get notified if its session have been deleted
            </summary>
        </member>
        <member name="P:Votations.NSurvey.GlobalConfig.SqlBasedAnswerTypesAllowed">
            <summary>
            Are Sql based queries answer types allow
            </summary>
        </member>
        <member name="P:Votations.NSurvey.GlobalConfig.UploadedFileDeleteTimeOut">
            <summary>
            How many hours can unvalidated uploaded files stay in the database
            </summary>
        </member>
        <member name="P:Votations.NSurvey.GlobalConfig.Version">
            <summary>
            Current version of the tool
            </summary>
        </member>
        <member name="P:Votations.NSurvey.GlobalConfig.XmlDataSourcePath">
            <summary>
            Path of the Xml datasources
            </summary>
        </member>
        <member name="P:Votations.NSurvey.GlobalConfig.HelpfilesPath">
            <summary>
            Path of the Xml help files
            </summary>
        </member>
    </members>
</doc>
